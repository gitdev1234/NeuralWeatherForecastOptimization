name: 'CaffeNet'
layer {
  name: 'data'
  type: 'Input'
  top: 'data'
  top: 'label'
  input_param { shape: { dim: 4 dim: 6 dim: 1 dim: 1 } }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  # learning rate and decay multipliers for the filters
  param { lr_mult: 1 decay_mult: 1 }
  # learning rate and decay multipliers for the biases
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 30     # learn 96 filters
    kernel_size: 2    # each filter is 11x11
    stride: 1          # step 4 pixels between each filter application
    weight_filler {
      type: "gaussian" # initialize the filters from a Gaussian
      std: 0.01        # distribution with stdev 0.01 (default mean: 0)
    }
    bias_filler {
      type: "constant" # initialize the biases to zero (0)
      value: 0
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2 # pool over a 3x3 region
    stride: 1      # step two pixels (in the bottom blob) between pooling regions
  }
}
layer {
  name: 'inputLayer'
  type: 'InnerProduct'
  bottom: 'pool1'
  top: 'inputLayer'
  inner_product_param {
    num_output: 30
    weight_filler {
      type: 'xavier'
    }
    bias_filler {
      type: 'constant'
    }
  }
}
layer {
  name: 'activatedInputLayer'
  type: 'ReLU'
  bottom: 'inputLayer'
  top: 'activatedInputLayer'
}
layer {
  name: 'hiddenLayer1'
  type: 'InnerProduct'
  bottom: 'activatedInputLayer'
  top: 'hiddenLayer1'
  inner_product_param {
    num_output: 30
    weight_filler {
      type: 'xavier'
    }
    bias_filler {
      type: 'constant'
    }
  }
}
layer {
  name: 'activatedHiddenLayer1'
  type: 'ReLU'
  bottom: 'hiddenLayer1'
  top: 'activatedHiddenLayer1'
}
layer {
  name: 'hiddenLayer2'
  type: 'InnerProduct'
  bottom: 'activatedHiddenLayer1'
  top: 'hiddenLayer2'
  inner_product_param {
    num_output: 30
    weight_filler {
      type: 'xavier'
    }
    bias_filler {
      type: 'constant'
    }
  }
}
layer {
  name: 'activatedHiddenLayer2'
  type: 'ReLU'
  bottom: 'hiddenLayer2'
  top: 'activatedHiddenLayer2'
}
layer {
  name: 'hiddenLayer3'
  type: 'InnerProduct'
  bottom: 'activatedHiddenLayer2'
  top: 'hiddenLayer3'
  inner_product_param {
    num_output: 30
    weight_filler {
      type: 'xavier'
    }
    bias_filler {
      type: 'constant'
    }
  }
}
layer {
  name: 'activatedHiddenLayer3'
  type: 'ReLU'
  bottom: 'hiddenLayer3'
  top: 'activatedHiddenLayer3'
}
layer {
  name: 'hiddenLayer4'
  type: 'InnerProduct'
  bottom: 'activatedHiddenLayer3'
  top: 'hiddenLayer4'
  inner_product_param {
    num_output: 30
    weight_filler {
      type: 'xavier'
    }
    bias_filler {
      type: 'constant'
    }
  }
}
layer {
  name: 'activatedHiddenLayer4'
  type: 'ReLU'
  bottom: 'hiddenLayer4'
  top: 'activatedHiddenLayer4'
}
layer {
  name: 'outputLayer'
  type: 'InnerProduct'
  bottom: 'activatedHiddenLayer4'
  top: 'outputLayer'
  inner_product_param {
    num_output: 6
    weight_filler {
      type: 'xavier'
    }
    bias_filler {
      type: 'constant'
    }
  }
}
layer {
  name: 'activatedOutputLayer'
  type: 'ReLU'
  bottom: 'outputLayer'
  top: 'activatedOutputLayer'
}
